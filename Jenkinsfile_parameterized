 pipeline {
    agent any

    parameters {
        string(name: 'BRANCH_NAME', defaultValue: 'master', description: 'Branch to build')
    }

    tools {
        maven 'maven-3.9.4'
        jdk 'java21'
    }

    environment {
        NEXUS_CREDENTIAL_ID = 'nexus-token'
        SONARQUBE_ENV = 'sonar' // Matches SonarQube installation name
        NEXUS_REPOSITORY = 'maven-snapshot123'
        NEXUS_URL = 'http://3.147.65.25:8082'
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Git Clone') {
            steps {
                git branch: "${params.BRANCH_NAME}", url: 'https://github.com/Sushmitha1-16/spring3-mvc-maven-xml-hello-world-1.git'
            }
        }

        stage('Maven Compile') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv("${SONARQUBE_ENV}") {
                    sh 'mvn sonar:sonar'
                }
            }
        }
stage('Upload to Nexus') {
    steps {
        configFileProvider([configFile(fileId: 'maven-settings', variable: 'MAVEN_SETTINGS')]) {
            sh 'mvn deploy -s $MAVEN_SETTINGS -DaltDeploymentRepository=nexus::default::http://3.147.65.25:8082/repository/maven-snapshot123'
        }
    }
}


        stage('Slack Notification') {
            steps {
                slackSend (
                    channel: '#jenkins-status',
                    message: "✅ Build completed successfully for branch: ${params.BRANCH_NAME}",
                    color: 'good'
                )
            }
        }
    }

    post {
        failure {
            slackSend (
                channel: '#jenkins-status',
                message: "❌ Build FAILED for branch: ${params.BRANCH_NAME}",
                color: 'danger'
            )
        }
    }
}
